[
  {
    "breadcrumb": "",
    "content": "Dokumentacja Jest to dokumentacja do gry 2D inspirowanej grą The Matriarch stworzonej w Godot Engine w tematyce WZIM SGGW.\nRozdziały: Dokumentacja skryptów ",
    "description": "",
    "tags": null,
    "title": "Dean's Paranoia",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "Dean's Paranoia",
    "content": "Dokmentacja plików gd Strony w tym rozdziale zawierają opis plików z logiką Dean’s Paranoia areaNotifiers.gd booster.gd chat.gd deanInput.gd deans_tablet.gd endgame.gd FireAlarm.gd fireAlarmSetup.gd global.gd kickScript.gd lecture_hall.gd main_menu.gd main.gd map.gd movementInput.gd npc_animation_tree.gd npcMovementInput.gd PlayerInfo.gd server.gd ServerBrowser.gd ServerInfo.gd single_ip_info.gd start_menu.gd student_animation_tree.gd studentInput.gd tablet_single_student.gd task.gd terminal.gd waiting_room.gd ",
    "description": "",
    "tags": null,
    "title": "Dokumentacja skryptów",
    "uri": "/docs.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt przekazujacy informacje czy dany obszar znajduje się na ekranie.\nOpis Właściwości map var mapReferencja do obiektu mapy.\nSygnały signal noteTask(isVisible): Sygnał informujący o widoczności zadania z notatkami signal computerTask(isVisible): Sygnał informujący o widoczności zadania z komputerem signal walkingTask(isVisible): Sygnał informujący o widoczności zadania z chodzeniem ",
    "description": "",
    "tags": null,
    "title": "areaNotifiers.gd",
    "uri": "/docs/areanotifiers.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiada za usuniecie boostera z mapy po użyciu go przez gracza.\nOpis Metod on_boost_requested func on_boost_requested()Funkcja usuwająca booster po jego zebraniu.\n",
    "description": "",
    "tags": null,
    "title": "booster.gd",
    "uri": "/docs/booster.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za wygląd i funkcjonalność chatu podczas rozgrywki.\nOpis Właściwości new_message @export var new_message: PackedSceneZmienna przechowująca scenę dla nowej wiadomości na chacie.\nline_edit var line_editReferencja do pola tekstowego chatu.\nmessage_panel var message_panelReferencja do panelu wiadomości.\nchat_in_use var chat_in_use: bool = falseFlaga określająca, czy czat jest aktualnie używany.\nOpis Metod add_message_to_chat func add_message_to_chat(message_content, name)Funkcja dodająca wiadomość do czatu.\nSygnały signal chat_opened(is_opened): Sygnał informujący o otwarciu lub zamknięciu czatu. ",
    "description": "",
    "tags": null,
    "title": "chat.gd",
    "uri": "/docs/chat.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za czynności wykonywane przez gracza sterującego dziekanem.\nOpis Właściwości catch_info_instance var catch_info_instanceInstancja widżetu odpowiadającego za informacje o złapaniu studenta.\nis_tablet_open var is_tablet_open: bool = falseFlaga określająca, czy tablet dziekana jest otwarty.\nscene var sceneGotowy widget sceny tabletu.\ntablet_scene var tablet_sceneScena tabletu.\nis_task_area var is_task_areaZmienna określająca, czy dziekan znajduje się w obszarze zadania.\nbody var body: CharacterBody2DReferencja do ciała postaci.\ncan_use_alarm var can_use_alarm: bool = falseFlaga określająca, czy Dean może aktywować alarm przeciwpożarowy.\nOpis Metod change_alarm_state func change_alarm_state()Funkcja obsługująca zmianę stanu alarmu przeciwpożarowego.\nmanage_deans_tablet func manage_deans_tablet()Funkcja zarządzająca widżetem tabletu dziekana.\nSygnały signal student_picked(): Sygnał informujący o wybraniu studenta. signal student_catched(name): Sygnał informujący o złapaniu studenta. Przekazuje nazwę złapanego studenta. ",
    "description": "",
    "tags": null,
    "title": "deanInput.gd",
    "uri": "/docs/deaninput.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za obsługe tabletu dziekana.\nOpis Właściwości single_scene var single_sceneReferencja do sceny pojedynczego studenta\n",
    "description": "",
    "tags": null,
    "title": "deans_tablet.gd",
    "uri": "/docs/deans_tablet.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za obsługę przycisku do zamknięcia gry po wyświetleniu wyników rozgrywki.\n",
    "description": "",
    "tags": null,
    "title": "endgame.gd",
    "uri": "/docs/endgame.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za zmiane tekstury alarmu gdy zostanie on sabotowany.\nOpis Właściwości textureAfterUsage var textureAfterUsage = \"\u003cCompressedTexture2D#-9223367935513261906\u003e\"Opis Metod change_texture func change_texture()Zmienia teksture.\n",
    "description": "",
    "tags": null,
    "title": "FireAlarm.gd",
    "uri": "/docs/firealarm.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Odpowiada za rozpoczęcie spotkanie kryzysowego i wywoływanie sceny FireAlarm.\nOpis Właściwości useable var useable: bool = trueOpis Metod use_alarm func use_alarm(isSabotaged)Używa alarmu.\nset_lecture_hall func set_lecture_hall()Sygnały signal change_texture(): ",
    "description": "",
    "tags": null,
    "title": "fireAlarmSetup.gd",
    "uri": "/docs/firealarmsetup.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt zawierający globalne zmienne całej gry, takie jak nazwy graczy, lokalizacje i typy zadan.\nOpis Właściwości Players var PlayersSłownik przechowujący informacje o graczach.\ndeanId var deanId: intIdentyfikator dziekana.\nstudentsNames var studentsNamesLista dostępnych nazw studentów.\nusedNames var usedNamesLista użytych nazw studentów.\nTasks var Tasks: ArrayLista dostępnych zadań.\nUsedTasks var UsedTasks: ArrayLista już przydzielonych zadań.\nOpis Metod remove_name func remove_name(nameNumber: int)Funkcja dodająca zwolnioną nazwę studenta do listy dostępnych nazw.\nresetTasks func resetTasks()Funkcja resetująca listę zadań, przenosząca zadania z UsedTasks z powrotem do Tasks.\nget_task_data func get_task_data(task_number: int) -\u003e TaskFunkcja zwracająca dane o zadaniu o określonym numerze.\nmanage_task func manage_task(task_number: int)Funkcja zarządzająca zadaniem o określonym numerze.\nremove_task func remove_task(task_number: int)Funkcja usuwająca zadanie o określonym numerze z listy dostępnych zadań.\nPodklasy Task Opis Właściwości positionX var positionX: floatPozycja na osi X danego zadania.\npositionY var positionY: floatPozycja na osi Y danego zadania.\ntaskType var taskType: StringSłowny opis typu zadania.\nOpis Metod _init func _init(positionX, positionY, taskType) -\u003e TaskInicjalizator klasy Task.\n",
    "description": "",
    "tags": null,
    "title": "global.gd",
    "uri": "/docs/global.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za wykreślenie z listy studentów wybranego przez dziakana studenta.\nOpis Właściwości on_lecture_hall var on_lecture_hall = falseFlaga określająca, czy postać studenta znajduje się w sali wykładowej.\nSygnały signal on_student_hovered(name): Sygnał informujący o najechaniu myszką na studenta. ",
    "description": "",
    "tags": null,
    "title": "kickScript.gd",
    "uri": "/docs/kickscript.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za odbycie spotaknia porządkowego, podczas którego dziekan może dokonać wykreślenia gracza z listy studentów.\nOpis Właściwości npcScene var npcSceneŁaduje scenę postaci NPC.\ndeanScene var deanSceneŁaduje scenę postaci Deana.\nrng var rngTworzy nowy generator liczb losowych.\navailable_spots var available_spotsLista dostępnych miejsc.\nclicked var clicked = 0Licznik kliknięć.\nkicked_player_number var kicked_player_number = 1Numer gracza do wyrzucenia.\nmaximum_ammount_to_kick var maximum_ammount_to_kick = 1Maksymalna liczba graczy do wyrzucenia.\nhovered_student var hovered_studentZmienna przechowująca informację o studencie, nad którym gracz będący dziekanem wskazuje kursorem w danej chwili.\nstudents_to_kick var students_to_kickLista studentów do wyrzucenia.\nplayersCount var playersCount = 0Licznik graczy.\nendgame var endgameŁaduje scenę zakończenia gry.\nkicked_notification var kicked_notificationŁaduje scenę powiadamiającą o wyrzuceniu.\nOpis Metod on_npc_spawn func on_npc_spawn()Funkcja wykonująca się przy dodawaniu npc do mapy.\nset_student func set_student(name, spot)Ustawia rolę podanego gracza na studenta i jego miejsce na auli.\nset_dean func set_dean()Ustawia rolę podanego gracza na dziekana.\non_student_moved func on_student_moved()Funkcja wykonuje się kiedy dziekan wybierze studenta, aby go wykreślić z listy.\non_student_catched func on_student_catched(name)Funkcja wywołuje się gdy dziekan próbuje złapać studenta.\nquit_game func quit_game()Funkcja zamykająca grę i uruchamijąca scene pokazującą zwycięzcęrozgrywki.\nchange_players_count func change_players_count()Zmienia licznik pozostałych studentów (nie botów) pozostałych w grze.\nshow_end_screen func show_end_screen()Przełącza widok gracza na scene informującąo zakończeniu i zwycięzcy rozgrywki.\nsend_restart_task_call func send_restart_task_call()Przygotowuje mapę do kolendej rundy.\nremove_student_from_hall func remove_student_from_hall(i)Usuwa studenta z auli.\nback_to_game func back_to_game(to_kick)Uruchamia funkcje usuwającą graczy z rozgrywki, którzy są na liście do usunięcia. Ponadto Usuwa wszystkie npc, aby można było je na nowo przypisać.\nrestart_map func restart_map()Przypisuje studentów odpowiednich piętr. Ustawia kamerę gracza, czas rundy, oddaje graczom możliwość poruszania się.\nmove_student func move_student(name)Wizualnie przesuwa postać wybranego przez dziekana studenta.\nset_hovered_student func set_hovered_student(name)Ustawanie imię wybranego przez dziekana studenta do odpoweidniej zmiennej.\ncheck_if_was_player func check_if_was_player(name)Sprawdzanie czy wybrany przez dziekana student był graczem czy botem.\n",
    "description": "",
    "tags": null,
    "title": "lecture_hall.gd",
    "uri": "/docs/lecture_hall.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za główne menu, wyświetlające się po uruchomieniu gry.\nOpis Metod tweening_up func tweening_up(node)Parametry: node - element GUI Funkcja animująca przyciski GUI.\ntweening_down func tweening_down(node)Parametry: node - element GUI Funkcja animująca przyciski GUI.\n",
    "description": "",
    "tags": null,
    "title": "main_menu.gd",
    "uri": "/docs/main_menu.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Główny skrypt odpowiedzialny za funkcjonalności sieciowe.\nOpis Właściwości Address @export var Address = \"\"Address IP serwera\nPort @export var Port = 8909Port przez który komunukują się host z innymi instancjami gry.\nsingle_ip_info var single_ip_infoZmienna, która przechowuje informacje o pojedyńczym urządzeniu sieciowym, na którym można utworzyć grę.\npeer var peerZmienna przechowująca dane o łączącej się z hostem instancji gry.\nOpis Metod peer_connected func peer_connected(id: int)Parametry: id - unikalny numer generowany losowo podczas nawiązywania połączenia z seweren. Funkcja informująca o nowym graczu, który dołączył jako peer, wywołuje się gdy jest emitowany sygnał wbudowany ‘peer_connected’.\npeer_disconnected func peer_disconnected(id: int)Parametry: id - unikalny numer generowany losowo podczas nawiązywania połączenia z serwerem. Funkcja informująca o graczu, który rozłączył się jako peer, wywołuje się gdy jest emitowany sygnał wbudowany ‘peer_disconnected’.\nconnected_to_server func connected_to_server()Funkcja informująca o graczu, który połączył się do serwera klikając przycisk dołączenia do gry, wywołuje się gdy jest emitowany sygnał wbudowany ‘connected_to_server’.\nconnection_failed func connection_failed()Funkcja informująca o graczu, któremu nie udało się dołączyć do gry. Wywołuje się gdy jest emitowany sygnał wbudowany ‘connection_failed’.\nSendPlayerInformation func SendPlayerInformation(name, id)Parametry: name - nazwa gracza który dołączył do gry, id - unikalny numer generowany losowo podczas nawiązywania połączenia z seweren. Funkcja wysyłająca informacje o graczu, który połączył się do serwera. Funkcja zapisuje informacje o graczu w skrypcie globalnym\nStartGame func StartGame()Funkcja wywoływana w momencie rozpoczęcia gry, wyświetla mapę na ekranach graczy.\nhostGame func hostGame() -\u003e boolReturn: bool funkcja wywołująca wbudowane metody multiplayer API, funkcja ta sprawia, że inni użytkownicy mogą zobaczyć serwer.\nupdate_dean_id func update_dean_id(id)Funkcja zapisuje informacje o nowo wybranym dziekanie do skryptu globalnego.\non_update_id func on_update_id(id)Funkcja wywoływana w momencie wybrania innej osoby, która ma otrzymać rolę dziekana.\njoinByIp func joinByIp(ip)Funkcja sprawdzająca czy można dołączyć do serwera, jeśli to możliwe, to takoż czyni.\non_start_game func on_start_game()Funkcja wywoływana po kliknięciu przycisku rozpoczęcia gry. Rozpoczyna grę.\nsignName func signName(name_number, i)Funkcja przypisująca graczowi imię spośród wszystkich dostępnych imion studentów.\nSygnały signal current_player(id): signal isServer(): signal gameStart(): ",
    "description": "",
    "tags": null,
    "title": "main.gd",
    "uri": "/docs/main.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za wygląd oraz fukcjonalność mapy.\nOpis Właściwości studentScene @export var studentScene: PackedSceneDeklaracja zmiennych przechowujących trzy sceny: studentScene, deanScene, npcScene.\ndeanScene @export var deanScene: PackedSceneScena zawierająca wszelkie obiekty związane z dziekanem, tworzące go.\nnpcScene @export var npcScene: PackedSceneScena zawierająca wszelkie obiekty związane z npc, tworzące go.\ntextures var texturesInicjalizacja pustej listy ’textures'.\ntimeUi var timeUiŁadowanie sceny ’time.tscn’ z katalogu ‘ui’ i tworzenie instancji tej sceny. Odpowiada ona za mechanikę czasu rundy.\nisVotingProcess var isVotingProcess = falseInicjalizacja zmiennej ‘isVotingProcess’ jako logicznej wartości ‘False’. Informuje ona, czy dziekan jest w trakcie wybierania studenta do wykreślenia podczas spotakania porządkowego na auli.\nday var day = 1Inicjalizacja zmiennej ‘day’ liczbą całkowitą równą 1. Wskazuje ona na numer rundy gry.\nrand var randInicjalizacja generatora liczb losowych.\nOpis Metod restart_tasks func restart_tasks()Resetuje zadania przypisane npc.\nset_dean_position func set_dean_position(deanId, vector)zmienia pozycje dziekana na mapie.\nrestart_npc Usuwa każdego npc z grup danego zadania. Losuje każdemu nowe.\nfunc restart_npc(name, task_number)set_time_ui func set_time_ui(time)Ustawia czas rundy.\nsetNpc func setNpc(name, task_number, has_name)Ustawia obiekt jako npc.\nsetPlayer func setPlayer(i, task_number)Ustawia obiekt jako gracz.\nset_code_number func set_code_number(random, day)Losuje tablicę do wyświetlenia jednej z 3 cyfr kodu do serwera w zależności od numeru rundy.\nchange_code func change_code()Zmienia kod na tablicy.\nset_npc_for_host func set_npc_for_host(name, task_number, has_name)Analogicznie do set_npc, ale tym razem dla oczu hosta. Parametry: name - imię studenta, task_number - numer taska, które robi student has_name - zmienna bool, mówiąca czy npc już posiada imię Ustawia npc dla hosta.\nchange_view func change_view()Zmienia widok dla graczy na aulę.\nSygnały signal taskType(taskType): Sygnał ’taskType’ Emitowany z argumentem ’taskType’. Niesie informacje o typie zadania. ",
    "description": "",
    "tags": null,
    "title": "map.gd",
    "uri": "/docs/map.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za możliwość i kierunek poruszania sie gracza.\nOpis Właściwości player_name var player_name: StringNazwa gracza.\ncan_move var can_move: bool = trueFlaga określająca możliwość ruchu postaci.\nlast_direction var last_direction = \"(0, 0)\"Zmienna określająca ostatni kierunek ruchu gracza przed zatrzymaniem.\ntemp_speed var temp_speedTymczasowa prędkość, używana do zatrzymywania i przywracania ruchu.\nspeed var speed: int = 250Prędkość ruchu gracza.\ncanMove var canMove = trueFlaga określająca, czy gracz może się poruszać.\nOpis Metod apply_physics func apply_physics()Funkcja aplikująca fizykę ruchu gracza.\ncalculate_velocity func calculate_velocity()Funkcja obliczająca wektor prędkości gracza na podstawie kierunku wynikającego z wciśnietych przez niego klawiszy..\ntake_current_speed_value func take_current_speed_value() -\u003e intFunkcja zwracająca aktualną wartość prędkości gracza.\nstop_player_movement func stop_player_movement()Funkcja zatrzymująca ruch gracza.\nrestore_player_movement func restore_player_movement(tempspeed)Przywraca graczowi jego prędkość poruszania się.\nemit_direction_signal func emit_direction_signal(velocity)Funkcja emitująca sygnał informujący o kierunku ruchu gracza.\nstop_walking_animation func stop_walking_animation()Funkcja obsługująca zatrzymanie animacji chodzenia gracza.\nSygnały signal direction(direction_vector): Sygnał informujący o kierunku ruchu postaci. ",
    "description": "",
    "tags": null,
    "title": "movementInput.gd",
    "uri": "/docs/movementinput.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za animacje npc.\nOpis Właściwości taskVector var taskVector = \"(0, 0)\"Wektor wskazujący bieżące zadanie NPC.\nsprite_to_back_to var sprite_to_back_to: Sprite2DSprite, który zostanie przywrócony po zakończeniu wykonywania zadania.\nOpis Metod taking_notes_loop func taking_notes_loop()Funkcja obsługująca animacje zadania “takingNotes”.\ncomputer_loop func computer_loop()Funkcja obsługująca animacje zadania “computer”.\nvending_machine_loop func vending_machine_loop()Funkcja obsługująca animacje zadania “vendingMachine”.\nrotate_npc func rotate_npc(direction)Funkcja obsługująca obrót NPC.\nset_vector_and_sprite func set_vector_and_sprite(sprite, vector)Funkcja ustawiająca wektor i sprite postaci NPC.\nrun_animation func run_animation(taskVector)Funkcja uruchamiająca odpowiednią animację postaci NPC.\n",
    "description": "",
    "tags": null,
    "title": "npc_animation_tree.gd",
    "uri": "/docs/npc_animation_tree.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za ruch botów przy wykonywanych taskach.\nOpis Właściwości speed var speed = 400Prędkość ruchu postaci NPC.\ndestination var destination = \"(0, 0)\"Wektor docelowy dla ruchu postaci NPC.\npoint_A var point_A: Vector2Punkt A na trasie ruchu postaci NPC.\npoint_B var point_B: Vector2Punkt B na trasie ruchu postaci NPC.\nmove_direction var move_direction = \"(1, 0)\"Wektor kierunku ruchu postaci NPC.\ncan_move var can_move: boolFlaga określająca możliwość ruchu postaci NPC.\nwalking_task var walking_task = falseFlaga określająca, czy postać NPC jest w trakcie zadania polegającego na poruszaniu się.\nrng var rngGenerator liczb losowych.\nOpis Metod wait func wait()Funkcja zatrzymująca NPC.\nSygnały signal rotate(direction): Sygnał informujący o zmianie kierunku obrotu postaci NPC. ",
    "description": "",
    "tags": null,
    "title": "npcMovementInput.gd",
    "uri": "/docs/npcmovementinput.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za informacje o graczu.\nSygnały signal makeAsDean(playerId): Przekazuje informacje, że dany gracz ma otrzymać rolę dziekana. ",
    "description": "",
    "tags": null,
    "title": "PlayerInfo.gd",
    "uri": "/docs/playerinfo.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za logike związaną z terminalami oraz kodem do serwera z odpowiedziemi do testów dziekana, ten skrypt ma możliwość zakończenia gry zwycięstwem dla studentów.\nOpis Właściwości endgame var endgameZmienna przechowująca końcową scenę.\nrng var rngGenerator liczb losowych.\ngreen_terminal var green_terminalZielony terminal - scena.\nviolet_terminal var violet_terminalFioletowy terminal - scena.\nyellow_terminal var yellow_terminalŻółty terminal scena.\nterminal1 var terminal1Pierwszy wybrany terminal.\nterminal2 var terminal2Drugi wybrany terminal.\nterminal3 var terminal3Trzeci wybrany terminal.\nserverValue var serverValuePrzechowuje poprawny kod do serwera dziekana.\ndigits_sprites var digits_spritesPrzechowuje obrazki 10 cyfr do wyświetlenia na terminalach.\nOpis Metod set_server_value func set_server_value(value)Funkcja ustawiająca wartość poprawnego kodu do serwera dziekana.\ncalculate_value func calculate_value()Funkcja sprawdzająca poprawność wprowadzonych wartości do 3 terminali.\nrun_server_error func run_server_error()Wyświetla animacje na serwerze, informującą od niepoprawnym kodzie.\nset_terminals_position_for_host func set_terminals_position_for_host()Funkcja ustawiająca pozycję terminali dla hosta.\nset_terminals_position func set_terminals_position(position1, position2, position3)Funkcja ustawiająca pozycję terminali dla graczy.\nshow_end_screen func show_end_screen()Wyświetla ekran końcowy, informujący o zwycięzcy\non_number_changed func on_number_changed(name, value)Parametry: name - nazwa terminala, value - cyfra Funkcja zmieniająca teksturę cyfr na ekranie w zależności od wartości wprowadzonej do terminali.\n",
    "description": "",
    "tags": null,
    "title": "server.gd",
    "uri": "/docs/server.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za wyświetlanie serwera na liście dostępnych z którym obecnie można sie połaczyć oraz informacje o nim.\nOpis Właściwości listenPort @export var listenPort: int = 8911Port nasłuchiwania.\nbroadcastPort @export var broadcastPort: int = 8912Port nadawania\nbroadcastAddress @export var broadcastAddress: String = \"\"Addres na IP którym jest tworzony serwer.\nserverInfo @export var serverInfo: PackedSceneInformacje o nazwie serwera, jego adresie, liczbie graczy i daje możliwość dołączenia do tego serwera.\nbroadcastTimer var broadcastTimer: TimerCzęstotliwość odświeżania informacji z serverInfo.\nRoomInfo var RoomInfoSpakowane informacje, które klienci orzymują od hosta i na ich podstawie tworzą serverInfo\nplayerCount var playerCount = 0Ilość graczy na serwerze.\nbroadcaster var broadcaster: PacketPeerUDPZmienna odpowiedzialna za komunikacje po protokole sieciowym UDP.\nlistener var listener: PacketPeerUDPOdpiera inforamcje po UDP.\nis_host var is_host = falseFlaga informująca czy dana instanacja gry jest hostem.\nOpis Metod setBroadcastAddress func setBroadcastAddress(address: String)Parametry: address - ciąg znaków z adresem IP hostującego Funkcja ustawiająca adres strumieniowanie informacji związanych z aktualnym serwerem gry.\nsetUp func setUp()Funkcja ustawiająca port dla użytkownika, który planuje dołączyć do gry.\nsetupBroadcast func setupBroadcast(name)Funkcja ustawiająca strumieniowanie informacji z serwera do graczy.\nexit_tree func exit_tree()Funkcja wywoływana w momencie zamknięcia serwera.\ncleanUp func cleanUp()Funkcja czyszcząca informacje związane z serwerem.\njoinByIp func joinByIp(ip)Funkcja wysyłająca sygnał w momencie dołączenia do gry.\nSygnały signal joinGame(ip): ",
    "description": "",
    "tags": null,
    "title": "ServerBrowser.gd",
    "uri": "/docs/serverbrowser.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za informacje o dostepnych do wyboru serwerach.\nSygnały signal joinGame(ip) Rozpoczyna procedurę łączenia się do serwer o danym IP. ",
    "description": "",
    "tags": null,
    "title": "ServerInfo.gd",
    "uri": "/docs/serverinfo.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt obsługujący interfejs który umożliwia utworzenie servera na danej karcie sieciowej.\nSygnały signal host_down(ip): Sygnał informujący o wyłączeniu hosta z podanym adresem IP. ",
    "description": "",
    "tags": null,
    "title": "single_ip_info.gd",
    "uri": "/docs/single_ip_info.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za menu startowe gry oraz wybór formy dołączenia do rozgrywki.\n",
    "description": "",
    "tags": null,
    "title": "start_menu.gd",
    "uri": "/docs/start_menu.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt, który odpowiada za uruchamianie wszystkich animacji dla studenta.\nOpis Metod run_animation func run_animation(velocity)Uruchamia odpowiednią animacje chodzenia.\ntask_animation func task_animation(task_type)Uruchamia odpowiednią animacje do udawania zadania.\n",
    "description": "",
    "tags": null,
    "title": "student_animation_tree.gd",
    "uri": "/docs/student_animation_tree.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za sterowanie studentem przez gracza.\nOpis Właściwości dig_info_instance var dig_info_instanceGotowa zmienna przechowująca instancję sceny dig_and_dean_catch_info, która będzie używana do wyświetlania informacji o kopaniu i złapaniu przez dziekana.\ncurrent_task_area var current_task_area = \"\"Zmienna przechowująca aktualną strefę zadania gracza. Pusty string, jeśli gracz nie wykonuje zadania.\nfourthFloor var fourthFloorGotowa zmienna przechowująca scenę czwartego piętra.\nthirdFloor var thirdFloorGotowa zmienna przechowująca scenę trzeciego piętra.\ndangerScene var dangerScene = \"\u003cPackedScene#-9223367941569842968\u003e\"Gotowa zmienna przechowująca scenę informującą o wyjściu przez gracza poza obszar zadania.\ndanger_instance var danger_instanceZmienna do przypisania instancji sceny dangerScene.\ntask_finished var task_finished = trueFlaga określająca, czy zadanie gracza zostało zakończone.\ncatchable var catchable: bool = falseFlaga określająca, czy student może zostać złapany przez dziekana.\nis_catched var is_catched: bool = falseFlaga określająca, czy student został już złapany.\ncan_use_alarm var can_use_alarm: bool = falseFlaga określająca, czy gracz znajduje się w strefie, gdzie można aktywować alarm.\nmultiplayerId var multiplayerIdIdentyfikator wieloosobowy gracza.\ncan_use_server var can_use_server: bool = falseFlaga określająca, czy gracz znajduje się w strefie, gdzie można użyć serwera.\ncan_use_server_again var can_use_server_again: bool = trueFlaga określająca, czy gracz może ponownie użyć serwera.\nlevel var level: int = 3Zmienna przechowująca numer piętra na którym gracz się znajduje.\ncan_use_elevator var can_use_elevator: bool = falseFlaga określająca, czy gracz znajduje się w strefie, gdzie można użyć windy.\ncan_use_booster var can_use_booster: bool = falseFlaga określająca, czy gracz znajduje się w strefie, gdzie można użyć boostera.\nhas_booster var has_booster: bool = falseFlaga określająca, czy student posiada boostera.\ncan_use_terminal var can_use_terminal: bool = falseFlaga określająca, czy gracz znajduje się w strefie, gdzie można użyć terminalu.\nterminal_address var terminal_addressAdres terminala, którego gracz potencjalnie może użyć.\nfire_alarm_reference var fire_alarm_referenceReferencja do obiektu obsługującego alarm przeciwpożarowy.\ntemp_speed var temp_speedZmienna przechowująca tymczasową prędkość ruchu.\nbody var body: CharacterBody2DReferencja do ciała postaci (CharacterBody2D) - potrzebna do poruszania się oraz kolizji.\nOpis Metod change_alarm_state func change_alarm_state()Ta funkcja obsługuje włączanie alarmu przeciwpożarowego.\nremoveBooster func removeBooster()Ta funkcja usuwa boostera z mapy, jeśli istnieje.\nsabotage_alarm func sabotage_alarm()Funkcja do sabotowania alarmu przez studenta, zatrzymuje na chwile ruch gracza.\ntask_execution func task_execution()Funkcja do wykonywania taska przez studenta, wysyła sygnał w jakiej strefie znajduje sie gracz.\ncatch_student func catch_student()Funkcja wywołuje podfunkcje, które razem z nią tworzą pełną logikę łapania studenta przez dziekana.\nuse_server func use_server()Funkcja do używania serwera przez studenta, sprawdza czy wpisany kod jest poprawny.\nuse_elevator func use_elevator(side)Funkcja do korzystania z windy, przenosi gracza na odpowiednie piętro, bierze pod uwagę z której strony gracz wsiada do windy.\nacquire_booster func acquire_booster()Funkcja nadająca booster studentowi.\nteleport func teleport(ammount)Teleportuje gracza o wektor podany w parametrze ammount.\ndig func dig()Wyszukuje przeszkody w pobliżu i uruchamia kopanie, jeśli gracz jest skierowany w stronę przeszkody i naciśnięto przycisku spacji.\nstop_dig func stop_dig()Zatrzymuje proces kopania i wyłącza związany z nim timer.\nchange_catchable func change_catchable(boolean)Funkcja zmienia flagę: czy student może zostać złapany.\nchange_is_catched func change_is_catched()Funkcja zmieniająca stan zmiennej is_catched na true. Określa gracza jako złapanego przez dziekana.\nstop_player_movement func stop_player_movement()Funkcja do zatrzymania ruchu studenta, pobiera aktualną predkość i przechowuje ja w temp_speed.\nremove_obstacle func remove_obstacle(_obstacle_to_destroy)Funkcja usuwa obiekt na podstawie przekazanej referencji do tego obiektu.\nSygnały signal player_task(task_type)Sygnał emitowany, gdy gracz otrzymuje nowe zadanie. Parametr task_type określa typ zadania.\nsignal disable_player_movement_for_duration(duration)Sygnał emitowany w celu wyłączenia ruchu gracza na określony czas. Parametr duration określa długość wyłączenia.\nsignal use_chat(name)Sygnał używany do uruchomienia czatu. Parametr name określa nazwę czatu.\nsignal exit_chat(name)Sygnał używany do wyjścia z czatu. Parametr name określa nazwę czatu.\n",
    "description": "",
    "tags": null,
    "title": "studentInput.gd",
    "uri": "/docs/studentinput.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za informacje o zaznaczeniu studenta w tablecie dziekana.\nOpis Właściwości isChecked var isCheckedZmienna przechowująca stan zaznaczenia.\ncheckmark var checkmarkReferencja do ikony fajka.\ncross var crossReferencja do ikony krzyżyka.\n",
    "description": "",
    "tags": null,
    "title": "tablet_single_student.gd",
    "uri": "/docs/tablet_single_student.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający, za uruchamianie animacji wykonywania zadania przez daną postać.\nOpis Metod on_npc_task_type_emitted func on_npc_task_type_emitted(task_type)Parametry: task_type - typ tasku Funkcja do odtwarzania konkretnego zadania przez gracza.\nrun_task func run_task(task_type)Parametry: task_type - typ tasku Funkcja dobiera odpowiednią funkcje zależnie od zmiennej task_type.\ntask_computer func task_computer()Funkcja emitująca sygnał o task_type = computer.\ntask_taking_notes func task_taking_notes()Funkcja emitująca sygnał o task_type = takingNotes.\ntask_walking func task_walking()Funkcja emitująca sygnał o task_type = walking.\nvending_machine func vending_machine()Funkcja emitująca sygnał o task_type = vendingMachine.\nSygnały signal npc_walking_task(): signal npc_sprite_task(task_type): ",
    "description": "",
    "tags": null,
    "title": "task.gd",
    "uri": "/docs/task.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za informacje wyświetlane na terminalach.\nOpis Właściwości actual_value var actual_value = 0Zmienna przechowująca aktualną wartość wyświetlaną na terminalu.\ntextures var texturesZmienna przechowująca dostępne tekstury dla terminali (liczby i kolory).\ncan_update_value var can_update_value: bool = falseFlaga określająca, czy gracz może zmienić cyfrę na terminalu.\nOpis Metod load_textures func load_textures()Funkcja ładująca teksturę.\nupdate_texture func update_texture()Funkcja aktualizująca teksturę terminala.\nuse_terminal func use_terminal()Gdy gracz chce wejść w interakcje z terminalem, funkcja uruchamia odpowiednie fragmenty kodu, odpowiedzialne za zmianę cyfry na nim.\nshow_terminal func show_terminal(name)Zmiennia widoczność teminala na mapie.\nSygnały signal change_number(name, value): ",
    "description": "",
    "tags": null,
    "title": "terminal.gd",
    "uri": "/docs/terminal.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia \u003e Dokumentacja skryptów",
    "content": " Opis Skrypt odpowiadający za wyświetlanie i edycje informacji o rolach jakie otrzymuje każdy z graczy.\nOpis Właściwości serverInfo @export var serverInfo: PackedSceneZmienna przechowująca scenę zawierającą informacje o serwerze.\ncurrent var current: intZmienna przechowująca który z graczy pochodzi z tej instancji gry.\ndean var dean: intIdentyfikator gracza będącego dziekanem.\nisServer var isServer = falseZmienna przechowująca która z instancji gry jest hostem.\nOpis Metod enable_dean_change func enable_dean_change()Funkcja która przekazuje pozwolenie na zmianę gracza, który ma otrzymać rolę dziekana.\nmakeAsDean func makeAsDean(id)Funkcja przysłająca informacje o nowo wybranym dziekanie.\nfindDeanId func findDeanId() -\u003e intFunkcja która szuka gracza, która ma ustawioną rolę dziekana.\nrefresh_table func refresh_table()Funckcja odświeża tabelę z graczami - ich nazwą oraz rolą w grze.\non_current_player func on_current_player(id)Funkcja wysyłająca informajce o graczu, który obecnie jest wpisywany do tabeli.\nSygnały signal button_pressed(node): signal dean_picked(deanId): ",
    "description": "",
    "tags": null,
    "title": "waiting_room.gd",
    "uri": "/docs/waiting_room.gd.html"
  },
  {
    "breadcrumb": "Dean's Paranoia",
    "content": "",
    "description": "",
    "tags": null,
    "title": "Categories",
    "uri": "/categories.html"
  },
  {
    "breadcrumb": "Dean's Paranoia",
    "content": "",
    "description": "",
    "tags": null,
    "title": "Tags",
    "uri": "/tags.html"
  }
]
